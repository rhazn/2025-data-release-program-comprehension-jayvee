"id","submitdate","lastpage","startlanguage","seed","refurl","D1","D2","D3","D4","D5"
"11","1980-01-01 00:00:00","1","en","664882113","http://131.188.64.202/","A3","A4","easy:
- apart from the block definitions you give the complete pipeline in an easy unterstandable syntax with arrows, which makes it easy to get the main tasks of the pipeline
- the names of the given blocks and transforms are very good, so you already get the basic meaning of every block by only reading their names
- the blocks are sliced good, so that each block only does exactly one task

difficult:
- sometimes it is not quite clear what the blocks exactly do especially in the details (example: does the TableTransformer delete/consume the input column?)
- especially in a large pipeline a file might get really big because of all the definitions (especially unnecessary empty block definitions)","easy:
- the syntax of Python is very clean for example with only few brackets
difficult
- the method names are not always chosen good. Depending on the library it is not quite clear what each methods does
- the methods sometimes do many things at once (example: load to a sqlite file and automatically choose data types)","- the functional approach of Jayvee may be new to some people, and may confuse some people first (although it should be no problem once you experimented a bit with Jayvee)
- In Jayvee the blocks are structured and sliced very good as each block does exactly one task, while Python methods sometimes do multiple things at once
- In Jayvee everything (all blocks) are from the same source, while in Python there are many libraries with different method styles and documentation"
"12","1980-01-01 00:00:00","1","en","315141614","http://131.188.64.202/","A3","A4","According to me line by line approach make jayvee easy to understand.","In python, we have to understand the code properly. If someone do not know code perfectly then there is chance of the mistake.","in jayvee we have different block for the pipeline so that it is very easy to interpret. first we need to understand the idea then we can define the workflow and easily we can run the pipeline. in python, for the pipeline we have to search for the different library to run pipeline where as in jayvee, we have everything inside it."
"13","1980-01-01 00:00:00","1","en","1306867183","http://131.188.64.202/","A4","A3","","",""
"14","1980-01-01 00:00:00","1","en","1523782857","http://131.188.64.202/","A3","A2","new language.
must write it many times to get familiar.","just about practicing.","I think Jayvee has more  scripts and blocks.
python is really direct and short."
"15","1980-01-01 00:00:00","1","en","871689313","http://131.188.64.202/","A3","A4","I think validating a columns values, would be easier to understand if the format was specified in the block itself instead rather than in a valuetype/constraint, but it is not hard to understand this way either.","","Compared to Jayvee, many variables and reassigning them during the pipeline make the pipeline harder to understand and debug in Python."
"16","1980-01-01 00:00:00","1","en","617352731","http://131.188.64.202/","A4","A4","I find the descriptions in the documentation to be lacking. For example, the textfileinterpreter has only three words as a description. If I am using JV for the first time that is not going to help me understand much better.","Just the amount of online resources available for python make it a much easier language to get started with. The amount of libraries available in python also make it easily possible to do about anything with only a few lines of code.","The documentation and support from the python community"
"17","1980-01-01 00:00:00","1","en","935542157","http://131.188.64.202/","A4","A4","","",""
"18","1980-01-01 00:00:00","1","en","2059527232","http://131.188.64.202/","A3","A4","the difference in syntax was so interesting to me and to me it was somehow easier to write my pipeline in jayvee rather than to python.","python is the language i have written and worked with, so understanding it is easier in the first look.","the differencies in syntax sometimes make it harder to understand in the first look."
"19","1980-01-01 00:00:00","1","en","549994092","http://131.188.64.202/","A3","A4","The best part in jayvee is block type coding it is similar to LEGO and you can easily remember, read and write your code.","python is little difficult to read and its difficult to remember. ","jayvee is kind a block type language, its specific for data engineer and its build on node js that's give the jayvee plus point"
"20","1980-01-01 00:00:00","1","en","33171566","http://131.188.64.202/","A3","A3","You can see the overview of pipeline at the beginning of the code and it makes it easy to follow the code.","Syntax in python is really easy to understand ","python documentation is more understandable and more complete. There is not much examples of Jayvee code in the documentation and for new users it is hard to find what they want."
"21","1980-01-01 00:00:00","1","en","1654541760","http://131.188.64.202/","A3","A3","I'm not sure, but the name of some of the blocks in Javvee or python didn't match the task they were doing which made it confusing. But for this task, Jayvee was easier to understand.","It was not that hard to understand it, but a bit naming issue was making it hard. For example the translation one was more filtering than translating to English.","Jayvee is more limited, so the options are limited to implement something as well which makes it easier to understand if we see a new code. "
"23","1980-01-01 00:00:00","1","en","428690682","http://131.188.64.202/","A3","A2","The pipeline is easy to understand as jayvee is easy to understand and read. There are not lot of lines of code and keywords describe their uses. |","I have worked with python so I was aware what was going on in the code and nothing looked new to me. 
This was the main reason for finding it easier.","Differences between them: 
If I would have seen the code with no prior knowledge of both the languages I would find Jayvee more easy to understand."
"24","1980-01-01 00:00:00","1","en","1580773817","http://131.188.64.202/","A2","A4","code structured into blocks and self-explanatory methods and type names. Sequential arrangement and explicit mention of pipeline steps at the beginning of code.","some functions like lambda, list comprehension and implicit operations are not intuitive and requires documentation and comments to understand. ","python code would need comments to explain the steps. without comments the code seems a bit complicated and technical. Most of jayvee blocks are self explanatory and structured in a sequential manner."
"25","1980-01-01 00:00:00","1","en","1488081177","http://131.188.64.202/","A3","A4","The structure and and the intentions of the block structures makes it easier to grasp the function and reach of the different parts of the code.
The naming of the blocks and functions is clearly understandable even from a person that has not much programming knowledge.","
Python is a little bit harder to understand for a person without any knowledge in the programming language. It is not that easy to understand or even explain others just part snippets of the code, you have to have the complete code.","The Documentation of the codes is different. Python has the advantage of a better or more uniform structure in the documentation. Like Parameters, Returns and Raises with clear indentations. This makes it easier or quicker to grasp the function of the code with one quick glance."
"26","1980-01-01 00:00:00","1","en","1342512058","http://131.188.64.202/","A2","A4","The data pipelines written in jayvee is easy to understand and easy to read as English text. It is helpful while reading the code. It really understandable and feasible.","The code written in python might make some confusion,  ","When its come to compare the two language I will say javee is more easier than python."
"28","1980-01-01 00:00:00","1","en","2132802209","http://131.188.64.202/","A2","A3","Jayvee pipeline was easier for me because of the more structured code/pipeline. It felt like Jayvee flow was easier to comprehend. Also, I liked that Jayvee exposes the functionalities and types of every step/block through the telling clear names of the blocks and revealing the type of each step/operation. Furthermore, the outline of all pipeline steps in the top of the code gives quick yet sufficient overview of the most important aspects of the pipeline. So, even via reading the pipeline outline in the top in Jayvee the task can be understood. Yet. since Jayvee is still in its early phases, it is difficult to judge if the will be the case for Jayvee once it develops more and its complexity increases. However, I think that's the soul of Domain Specific Language (DSL) endeavor  and Jayvee shall grow in offering more sophisticated functionality while maintaining its clarity and easy of understandability. ","For the Python pipeline, I also think it was easy to understand. But Jayvee was easier. For Python, you need to be familiar with the used libraries and read each step till the end to understand what is the structure of the pipeline. Moreover, one needs to read about the parameters of each functions and usually in Pyhon and its libraries. the names are not that self-explanatory.","For the Python pipeline, I also think it was easy to understand. Yet, one have to use several libraries to realize the same results as Jayvee. Moreover, some functions are not as easy as Jayvee to understand based on its name. Furthermore, the Python pipeline did not offer any quick glimpses for understanding the Pipeline as for Jayvee. Also, things like ""map"" and sqlite parameter like echo are not as crystal clear as the Jayvee oftype concept."
"29","1980-01-01 00:00:00","1","en","1952621707","http://131.188.64.202/","A3","A4","The syntax where the different blocks are piped into each other makes the quick overview faster. The block structure may be something to get used to at first, but it's not too hard to learn.","Python is also not hard to read, but the constant usage of the import / library names (pandas.abc()...)makes it a little harder to spot the function names and the logic of the pipeline.","Jayvee code feels more specialized to the task of writing the pipeline. Some verbosity that is needed in Python (imports, classes, namespaces) are just not (or at least not so much) needed in Jayvee. Also the flow in which the data is transformed is more easy to read (no variable names of the dataframe etc you have to pass manually)."
"30","1980-01-01 00:00:00","1","en","1805824347","http://131.188.64.202/","A3","A3","Names of the blocks are familiar with the concepts that usualy used in the datapipelines","It is the most common tool that used in the area and also the one that i used most frequently therefore i have already spent significant time with its syntax.","i think the structure of the jayvee that allow us the the see relation level of the building blocks make it easier the follow but python provides more flexible solution options for a experinced user"
"31","1980-01-01 00:00:00","1","en","1581724725","http://131.188.64.202/","A3","A4","The pipeline gives a very quick overview over what happens. When the blocks are named clearly everything can be seen on one quick view. That makes the pipeline easier to understand.

On the other hand you might have to invest some time to get to know the different block types since those differ a bit from the programming languages that I am used to. But since the documentation is well structured that is an easy task.","The naming of python functions might not be as clear and easy to understand.  Also the magnitude of functions and syntax options can lead to a pipeline that is more difficult to read. 

On the other hand python is a programming language that I am already used to from other contexts. So it is somewhat more intuitively structured for me personally.","Mostly the structuring in blocks and naming of functionality"
"32","1980-01-01 00:00:00","1","en","907039038","http://131.188.64.202/","A3","A2","the easiest way to make it understandable is the 'oftype' that makes it very clear what operation is performed in a specific block. That's the thing I find more intuitive even if I don't understand Jayvee.","probably the previous familiarity with Python programming language.","Overall the blocks in Jayvee makes it very clear to get a good understanding of the pipeline but I would prefer Python over Jayvee (even though Jayvee is more intuitive) due to flexibility and familiarity with this programming language."
"33","1980-01-01 00:00:00","1","en","1639956661","http://131.188.64.202/","A3","A2","Need to think before swap the steps","I'm little aware to the python that's why it is easy to drag and drop the data pipeline steps.","Jayvee has different bloc which can able to extract any kind of information, as Python has own functions and library which helps to make pipeline, I experience that before starting the work in Jayvee need to read documentation very well. And for python there are many references are available which is helpful."
"34","1980-01-01 00:00:00","1","en","1026923474","http://131.188.64.202/","A4","A3","It has some level of dificulty because of the structure of the functions, I do not know what to expect inside a function.","I think it is easier because I'm programming with pandas like more than a year.","Jayvee is based of base type classes encasuladed for default, python is more open for customization."
"35","1980-01-01 00:00:00","1","en","549555445","http://131.188.64.202/","A3","A4","Since the language is new, some blocks are unknown so it took some time to understand. But compared to python, it is easier to understand.","Need to read the full code to understand what is going on. ","The blocks and their names made it easy to understand what is going on"
"36","1980-01-01 00:00:00","1","en","2131994355","http://131.188.64.202/","A3","A3","the constrain declaration part in the middle of the block's definition make it a little bit hard to understand the code. ","There are various libraries available for python which sometimes make it harder to understand which library is used for which tasks.","The Jayvee documentation is more naive user friendly than python for understanding the data pipelines. It's really easy to make a data pipelines using Jayvee than python."
"37","1980-01-01 00:00:00","1","en","1882445457","http://131.188.64.202/","A4","A3","jayvee is easy to understand because of the linear structure of the code, i can go step by step and understand this easily.","Python has lot of functionality and i think thats sometime helpful and also some time confusing as well","functionality: Python has a lot of functions
user base: A lot of people use python
but jayvee is  also good for data pipeline because it is specially made for this. "
"39","1980-01-01 00:00:00","1","en","716223853","http://131.188.64.202/","A5","A3","it is new so i think it was not easy to understand or read","easy to understand or read",""
"41","1980-01-01 00:00:00","1","en","143350792","http://131.188.64.202/","A2","A2","easy:
* overview in the beginning
* naming of the blocks is very clear

hard:
* sometimes the steps are too ""wordy"", but this is only personal preference
* i like having variables to know where the data is stored","easy:
* dataframes have a very easy to understand concept of tabular data
* it is always clear how the data is ""flowing"" through the different steps and operations

hard:
* lamdas are not really understandable to the layman
* functions like pd.read_csv are hard to understand, as they can read a DF from so many sources (in jayvee you have one datasource specified)","1) The concept of blocks: you can manually create this in python, but hardly anobody will do this
2) The naming of functions: in jayvee the operations have very clear names
3) The structure: in jayvee you are forced to give one whole pipeline descrption, in python you can get away without doing this
4) In jayvee you don't have to think about datatypes as much as in python "
"42","1980-01-01 00:00:00","1","en","259120063","http://131.188.64.202/","A4","A3","it is hard to say but i felt like codes represent different aim but they were connected.","actually i got a lot experience with python thats why is was easy for me so i can't answer this without bias :) but if i got same experience with jayvee it could be also easy to understand/","as i understand functions make easy to python so we can understand which part represent where/ but as i have less experience with jayvee probably i don't know the better aproaches/ why we write this at beginning     'CarsCSVInterpreter 
        -> NameHeaderWriter
        -> CarsTableInterpreter
        -> CarsLoader;' writing end of the code looks more logical for me. this totally my opinion :)."
"43","1980-01-01 00:00:00","1","en","1292626542","http://131.188.64.202/","A4","A4","When not being used to jayvee you would be first thinking that it is  a strange language and be afraid because sometimes we think that ""it is difficult"", when we are not familiar with it.
","Python has many build-in functions that are sometimes not self explaining and sometimes tricky ","I think Python has the advantage that the lines of code are less sometimes but Jayvee is more structured and self explaining. IT depends on the experience of the user; if well experienced in python, it would be easier for him to understand the python code faster. For a beginner i coding I think the fact that Jayvee is self explaining makes it easier to understand data pipelines."
"44","1980-01-01 00:00:00","1","en","1746032836","http://131.188.64.202/","A2","A4","easy: defined structure, esp. at the beginning as overview with the different steps
difficult: one has to know what each class is doing, naming/doc is very important","no structure, every pipeline is a new pipeline
easy for people knowing python and the packages
must use good programming habits to write good readable pipelines","python can be debugged in order to see steps/what did not work
big difference is the structure which jayvee kind of enforces and developer can easily recognize"
"45","1980-01-01 00:00:00","1","en","932302451","http://131.188.64.202/","A3","A4","The initial definition of the pipeline steps gives a good overview of what is executed in which order. Nonetheless, it is not always easy to distinguish the outcome of certain pipeline steps because of the 'interpreter' functions in between the 'action' steps. The code inside a function is mostly very nice to read and comprehend, because of its compactness.","It does not have an 'overview' of what is done in the pipeline like it exists in jayvee which leads to having a closer look to the functions to understand what is going to happen during the execution of the pipeline. This can get messy, especially with poor formatting/naming (I often have issues with code written by myself a few months later ;) ). Apart from that, python makes it possible to have a lot of functionality in just a few lines, which can make it hard to read if you have not written it yourself.","As mentioned, the pipeline overview in jayvee is a very nice way to get to know a data pipeline (I really like R over python on this behalf).
I had some issues creating a jayvee pipeline at first, because of the fact that sometimes multiple pipeline steps are needed to execute 'just' one task (file interpreter etc)."
"46","1980-01-01 00:00:00","1","en","1335969383","http://131.188.64.202/","A3","A4","Easy:
It has a very structured layout with very descriptive names for the classes/objects being used. 
Since the start you have an overall idea of every step of the pipeline just by the names you choose for every step of the pipeline.
Very human like thinking of how to program an ETL pipeline.|
Difficulty:
Sometimes the blocks look similar, (extracting, interpreting) which is not quite intuitive what might be happening.","Easy:
Familiarity of having is used before.
Somewhat human like language.
Easier to find help in the community (examples, forums).
Difficulty:
If you have not worked/used python before the syntax of pandas is quite difficult even for simple operations (renaming, droping, filtering etc). ","Syntax being used. Jayvee has a very human like language, almost like pseudo code which can be immediately understood even by non programmers in my opinion as long as they have a basic theoretic knowledge about pipelines.

Code structure in Jayvee also allows us to better have an idead of the steps in a pipeline. In Jayvee you are introduced with the steps in the first opening part of the pipeline creation. This way you can navigate easier to the parts you are interested. This kinda framework is better compared to python where the user is left to their own decisions about structuring the pipeline which might make it more difficult."
"47","1980-01-01 00:00:00","1","en","580769003","http://131.188.64.202/","A4","A3","The pipeline was easy to understand because the blocks where organized in a way that made sense and also the naming conventions make it easy. ","I have a better understanding of python","Mostly how t h blocks were structured, they make it seem like functions "
"48","1980-01-01 00:00:00","1","en","794315212","http://131.188.64.202/","A3","A4","The difficult part is delimiter which we can specify only one.It has readable structure and module.","Have to import lot of libraries.","Jayvee has a better code flow definition than python"
"49","1980-01-01 00:00:00","1","en","1511913049","http://131.188.64.202/","A2","A3","Block types make it quite easy to understand what is going on inside of a block for a person that might have little to no experience with programming in general, and it also helps the developer when using this language.","I think that also in Python, the pipeline in this experiment was quite easy to understand, however I believe that a developer can perhaps up the level of difficulty in their code, and that makes it challenging for someone that does not have an intermediate knowledge in this language.","I think the difference might have mostly to do with how much experience one has in programming; I think that Python might require quite some knowledge to get used to, while Jayvee is a bit easier to understand even as a person with not much programming experience."
"52","1980-01-01 00:00:00","1","en","836651203","http://131.188.64.202/","A2","A3","- Jayvee code steps are directly mapped to the data engineering pipeline lifecycle.
- More intuitive compared to Python.
- Good to see support of vs code plugins ","- It's easier as I was comfortable with Python language.
- Frameworks knowledge required
- Code Intellisense support from IDE""s like Pycharm, Visual Studio Code","- Python is  less intuitive compared to Jayvee in the case data engineering pipelines.
- Found learning curve is higher in Python to build data engineering pipeline as some one have to rely on external frameworks like pandas, and they evolve in time and  developer need to keep it up.
- Already established opensource community for Python"
"53","1980-01-01 00:00:00","1","en","261481085","http://131.188.64.202/","A4","A3","Lack of instant understanding/ experience in the Jayvee concepts.","Experience in Python for 3 years.","Jayvee seems more efficient for the task like building data pipeline. But lack of experience in Jayvee influences the understanding the codes instantly."
"54","1980-01-01 00:00:00","1","en","1369736559","http://131.188.64.202/","A4","A4","The names of the blocks usually indicate rather easily what the block is supposed to do. Additionally since we have a syntax that very well shows the actual flow of the pipeline (via the block -> block -> ... syntax), it also easily understandable what blocks are executed in which order. It feels very sequential, which makes the pipeline easy to read.

The only problem I had (although this wasn't any better in python), is that I e.g. could not tell if some columns were left out, just from the code. This is because the columns that shall be kept are simply named, without any information about what other column names there might be. But again, the same goes for python.","In this very script like fashion, we have no real modularization, and only the flow of the program (code being executed top to bottom) that somewhat describes the flow of the pipeline. But it seems very cluttered and very chaotic. Additionally once do have to know the pandas framework to really understand what is happening. Adding a new column is not a named function like ""add_column()"" but simply ""df['new_column'] = ..."", which does not trivially make it clear what is happening (could also be an assingment). To be fair, this is also true for other python types like dictionaries, but the point still stands.

Generally the code is less speaking, more cryptic and therefore makes it harder to understand what is happening.","Jayvee is specialized to represent pipelines, which shows. The syntax is adapted to very well represent a sequential flow, which is easily readable, just by looking at it. Python on the other hand is a general scripting language. It is very universal, but therefore not as perfect for pipelines. There is no real structuring. It is more or less just data access and modification on an object in state. The feeling of a sequential pipeline is not given by the shown python code."
"55","1980-01-01 00:00:00","1","en","1308318006","https://oss.cs.fau.de/surveys/index.php/727691?lang=en","A4","A3","The structure of the code was a bit difficult to understand when compared to python ","Easily readable, close to natural language. No unnecessary syntax ","Both are similar but I think Python is more readable than Jayvee.  "
"56","1980-01-01 00:00:00","1","en","744231228","http://131.188.64.202/","A3","A4","The pipeline flow easily explained that what was the flow of the pipeline before even looking at the code. it was easy to match with the options.","the flow was different. there was some options that were skipped to be given as option in the question so matching all of that was time consuming.","I really like jayvee since it is simpler and understandable as well. moreover, it it easier to use as a block and connecting it with the flow."
"57","1980-01-01 00:00:00","1","en","1589832129","http://131.188.64.202/","A3","A2","Mainly due to the code structure/layout, need to go back & forth to search for the specific function","The code was in order & much simple to understand. ","Code Structure"
"58","1980-01-01 00:00:00","1","en","1103015474","http://131.188.64.202/","A3","A4","Very clear, because of blockTypes, which give a hint what is done in this block.
Not so many features -> makes it easier to unterstand","So many features makes it more difficult to unterstand what the code does.
Language not especially made for data pipelines -> makes it more difficult","Less features in Jayvee makes it more easier + blockTypes, as mentioned above"
"59","1980-01-01 00:00:00","1","en","283986","http://131.188.64.202/","A2","A3","The code structure and syntax makes it easy to understand.","I have more experience with python, so it was easy understand the code otherwise the Jayvee is much easier to get familiar .","In Jayvee the code is written in simple structured, from extraction to interpreter and transformation, so even a non-coder can easily get an idea about it."
"60","1980-01-01 00:00:00","1","en","1341558039","http://131.188.64.202/","A4","A2","I am not familiar with the strategy : showing which blocks that I am going to use in the begining. So it is kind a weird for me.  I guess I would prefer showing them at the end. ","I am using python for a long time so I know it's syntax. ","As a programming language I only know Python so I always prefer its syntax. However, I am sure if I know java or etc. would be same difficulty  both Jayvee and Python. as a summary when I look at jayvee I am still capable of understanding context of it but it seems a bit ugly for me because it uses curly brackets and different unecessery symbols in the syntax."
"61","1980-01-01 00:00:00","1","en","1881348660","http://131.188.64.202/","A2","A3","Jayvee is much easier to understand because every step is divided into blocks the block types are very easy to understand. A single operation is performed in one block, which makes it easy to comprehend.","The pipeline in python has no specific structure to it making it a little difficult to understand.","Jayvee is much easier to learn and understand as compared to python as the operation are implemented in blocks, so even a naive person can easily learn and implement jayvee on their own."
"62","1980-01-01 00:00:00","1","en","1659911167","http://131.188.64.202/","A4","A3","Jayvee is also pretty easy to understand because of the specific structure.","Gone through python documentation many times from bachelors that is why it seems easy. If one works with jayvee often, definitely one will find jayvee is super easy than python. ",""
"63","1980-01-01 00:00:00","1","en","1370499427","http://131.188.64.202/","A3","A4","the code was understandable as the naming conventions were used correctly.","the code was not clearly written. using a proper functional approach would have been better so i could understand what a particular function is doing.","naming conventions used in both, functions were more structured in Jayvee and the formatting were a not so good in python"
"64","1980-01-01 00:00:00","1","en","1038908112","http://131.188.64.202/","A4","A3","","",""
"65","1980-01-01 00:00:00","1","en","2118114561","http://131.188.64.202/","A3","A3","well written and structured code in a flow which is simple to understand","code is written is written well -defined structure","Jayvee has clear and direct ""blocks"" and ""interpreters"" as compared to Python"
"67","1980-01-01 00:00:00","1","en","337224574","http://131.188.64.202/","A3","A4","data pipelines in Jayvee is easier to understand and write, because it is relatively fixed. So this is easier to learn and memorize for non-experienced programmers.","In python, there are many varieties and different options, libraries etc, it is harder for non-experienced to grasp the essence.","The relevant fixed standard to write in the language makes it much easier in Jayvee. "
"68","1980-01-01 00:00:00","1","en","1232394672","http://131.188.64.202/","A2","A4","Jayvee seems to be quite less computer language syntax and more abstracted English texts for each of the block of the pipeline. Thus, making it a lot easier to understand as it is pretty much just reading exactly what is happening in the pipeline. Moreover, the block-wise progress makes it even more streamlined to understand.","Python, even though easier to understand than most of the other Programming languages, still has a lot of the 'syntax' and the function definations which makes it slightly more complicated in comparison to Jayvee in my view.","Block wise pipeline, easier syntax."
"69","1980-01-01 00:00:00","1","en","1240045398","http://131.188.64.202/","A5","A3","I found the Jayvee code structure a bit difficult to understand, mostly the constraints and value type. The keywords are bit long and difficult to read when there is a limited time to perform an action. Documentation can be more clear with examples at the end of the website with an web interference to run it and see what is the possible output when we run a particular code snippet.","Easy to read and code as the language keywords are also short. Also, we have been practicing Python and Pandas for a long lime so we are habituated with the structure and data pipeline making it more easier.","I would say the structure of the code, in python there is no need of any kind of cursors, only indentations are fine but with Jayvee brackets, semi colons etc. make it a difficult to code and anything missed can result in failure of the program. Also, the keywords can be a little shorter. Otherwise, the understanding data pipeline is not that difficult with practice. We are mostly habituated with python so it seemed more easier than Jayvee."
"70","1980-01-01 00:00:00","1","en","2035707385","http://131.188.64.202/","A2","A4","Simple syntax and in code are in one flow (i.e, one by one).","Same but need to debug more than Jayvee.","Simple to understand."
"71","1980-01-01 00:00:00","1","en","833631509","http://131.188.64.202/","A2","A3","I think it is easier to understand in Jayvee as it looks more structured and visually clean. ","In pzthon it can also be understood but it is not as visually clean and ","Jayvee looks much more focused on building and working with pipelines than python as python is a multi purpose language"
"73","1980-01-01 00:00:00","1","en","1802700114","http://131.188.64.202/","A2","A2","Automatic piping (sometimes it's not 100% clear to me, if data and/or column names are in context)","easy: python syntax which is common
hard: potentially unstructured steps etc.","I feel like python gives you more controll and makes potential transformations easier, while jayvee looks like a simpler way to achieve data pipelining"
"74","1980-01-01 00:00:00","1","en","1736276577","http://131.188.64.202/","A3","A3","Especially the beginning of the pipeline, where we define the whole structure once, makes it very easy to follow the pipeline trough the process. Also I personally think that the structure into blocks and pipes makes it easier to understand too.","sometimes it is a bit unstructured to read Python if it is not commented and labeled. Here it was still alright but it can get very messier very fast. ","Its easier to prevent messy and unstructured Code with using Jayvee."

